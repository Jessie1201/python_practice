# https://leetcode.com/problems/valid-palindrome-ii/
# you may delete at most one character. Judge whether you can make it a palindrome.

class Solution:
    def checkPalindrome(self, s: str) -> bool:
        for i in range(int(len(s)/2)):
            if s[i] != s[-i-1]:
                return False
        return True

    def validPalindrome(self, s: str) -> bool:
        for i in range(int(len(s)/2) + 1):
            if s[i] != s[-i-1]:
                if i == 0:
                    pruned_1 = s[i+1:]
                    pruned_2 = s[:-i-1]
                else:
                    pruned_1 = s[:i] + s[i+1:]
                    pruned_2 = s[:-i-1] + s[-i:]
                return self.checkPalindrome(pruned_1) or self.checkPalindrome(pruned_2)
        return True

if __name__=="__main__":
    obj = Solution()
    # param_1 = obj.validPalindrome("eccer")
    param_1 = obj.validPalindrome("uvmthjvgjwhbtgairqxfagviertrvnqsmiohthvtpiykdyezewcekbznxyzwekrgnstwgdgaopvsgttntwvfaeorhmsstcilpiyjiutsiwwqeqgscxpcwfkforowqqvduassrzrjeicmfvfhfvjayupewgwzspwbnhjnaworvydvxefezxnerufgzsoymuyaaygccqirlzjvyusvbbotsmlxycoftedddtletrsrydxgeuymlmmcmfxwuwiazrgcybvbvidyoozvcekobwkkqoomeorcbxlzqydmmtmhvaozphkphfqdpvsycpzyoaysvfwmceynifnptmdzmxdfhjgykuzixkgxaguhvlsieaztozpzhvolywyrepqgrfpioausydostncbifqxambskirvcvdrzycxzibylyjqhttvcswjzbxasyscpikoydhvzuvyenioqxdgjqwdnpwamuldkbmvqfifoqzcrakzajkoybnblyakbnoaoolhjrjqybzqbitenhezrkxcbpvdxriwxdhmnelgbzkkpzbkkbeogkmihnreuxoepuvcrohunscztpuuzzxgfqohyyqgpfvhqtjlplvttintopkmdxzijxjzeirgmlfydilsqrhnpnvndtpwvjqiqpadqrkbdbgmxltowsulsifjeytrvadodlrqjqkqmhdfzjnycmhamnhnvoestquzqsdigkqutggfvmmnmmbcljqpdqretrgiqbaegkfvwcoepsmquveegoeflblylpbxeqqalpnuzbejrtbzftiaamblqbnmgfntyeygdobjwzlkxgvjbtfevovxpdhtobynfjpbwzpyblxgnngabhdxsozyfbvyptngbulzbyfhzmmorsvtjzwasysfnbnhotogetzkxfmtmrxeeijgkmckgsdazllkdygfakmcggghbrofvccglkhtbfqkvxjqbomxzkrlpztostdngxubecdftpovtpelbanmrligorzwmtyyetmzkiaywrvgrxgbyxiexbbmrygmgxqyzksaptzmacbcbkmwpczwbcectqsrivakpfoltlggmvhrktktrhhmjfrxmizedlxcwshictcorkbauclazedbiuvnrdssyhjhhkozopzeyutmioyxpbozhdmgsudrbtfjexdkkbbydwefkaxiqdlijunknzphphusqjwrprvfnprmqjywfrmfiskrwhsybpuhqhnqdicjvrrizmxhqrgffhrflbfytcpuaoucbnfwccjciwyunkdfltyqijlxamnyeujryjdvokmtnzfxnbczgzvtgzfnxmmzomsycoqjaugdotxmbrqxzalnjvsrcxqybdyklbwaabtyrmzwvccfjhipljnompibjwqrinhgjvdrkbujlebrbbyvnrvhbgmllzuoiivibtlbeljsdbagadzruklkuplwwgmzuxjztjtcmzbijlrgqugcvykmodegokdtkuhazbtpkmeuupzduogfpdpwdyjnemincaagughdvgcipfopiehkxvfmgzshvnpbrlvnppxqedtvmdxefnbatubgycdwsdhrhznbalwnbmzelkiqbdqackazrwpkhschlemnndehtjvndsivuorbwhxcbchcdgxhvreuukajrofukpwacoigratsrzgopafcrgahpdlhmqaauhfimkxsdyeoqaddkgycealzyekiowewhhsszzzplydrvwxlazajhlqjtsihmqxtshyamphwjrhubhitvpboowssejuoshtuixyratqojwmefkabtpxymcazvqayrfxobdgzwhutobsmdnnnhrkrfpiciwqecbetnrblrkzjyfnkperecflhfwpjzpwpqkbljikmqlkcnqzpdsbdcohqfdtzobyxrrodhlexccuafabrjqvdrwibljyihanypettzkibzkzmitfoknfrhvbwvoqiopgojujkdofcyplbnzphfoqlsytuccqgsynrcmcxxopmmiyikukhzfhkhigsvgijuomaisgiyeafkghmqzfqdrjmajxlijnpyomactuedqvtphkqneuehjjrphlubagoqtmxpueoivnulqosttvjmotnvydatuedcyualckhqzppvkstwljmedkqirpfruhhruqtgetmkucexxodjvfelnuggzoypbqgndtiafyltsxuyfvxbgumbbpfmcuuecfoatmhxwnimtqznazvjspudbyyzledyqquqjezzygouvtxntlwxxvxxrcjvoaavrcfmoqbjmkrsdtufmeydckphpmkrwjnrmuqzdvocxwwmvxbbprjivhqoubvbobrugtsebfngqzefghnozfndbavajptynmmncwjtdjrxfsrqqczhjbxegtzrwkrpugdmtooxvjdxfpzykabhtjegsexcxgiiopswinyiiewlttuhxwobixddbxqnygpjviclbtrtgfvvybrabxspijpqopdupgzfwbjaoqdizahtkpfcdyswaqfxsenwmdjlkceezryoprexjjnjgtruzydrqevxurciyjvoesrvsgfdwbgcwbjagdnmbtpecgkciyfqvtexcttcphbaswiokcblklxdnzlxeynzikpsnwqpcaeopnkhrzzkjaqmetclkkpdbwevxlmrmztlzidwqumqqbubovejjcuaqihnpaoflfojdmlighsiwpjveapgzhmectgeelijzorfnoclrmyzqowmbcaxpxpzvtijmjmthdndzrxmzonfdyiloponucsjcupjdllrqsgpdipeuwnaxoqvhvbvwztjbwlvttqravzoptmzfmiwltutlajvvaoupgmcuaqegldzblbziklwalayaxnzrtctjizyagbdccvumilwerfisqpjzgrdoupflvcazyzvezpnwytcdquykwyqqqtnoxxhlapwwcfjxmgwezbozvzkpjwwsypchuhxockjwbtnxbugyxrocaaofaijrogaktftkwpluufxddtynddjuletflhvtmxsfgwurtglkmhlklmfcsuvmdttiarycemxjlerikpiwjpixzrxukysxqzbssvzrvyhbnywmptxmjzyolsyexjbxdzmuljzvbofmuslrkfxrwuayrmmqhvgykhefcowknjcvuufbulrzjepnwvrfxpxhnlbmjthomjmnjluguikazdkrtxtvvhsfbpqrmlxsxoiwcqbpdpaurmrmlyaebiybvzoroyrntgwzmyadgcorwkqasjsstkixgdphwktyecetnkkzexnypjvjrrfscdtldxxpqdprdjsiyfkarxaektjxyezkxxwnigxtxveszwcxbeoznevqbhfzlqklamqhmjberqwzfsizcsejqaoihpfzqrmltlwtegzrxjjhprwmnujnpjtootpkatriftkarcldoflqfjmuycxkjdlkqughjzpolilftwbmcqvtnepwottvhrdyjvfsgdxrapextiqasxykpsuksmeotbbxzawpgzinexoskjivywchmjadujblhiioebgnubgitrrxjfdqivrprizowrgcsjlftecaaktywqzhrenjfezeydpbzeslxwrbvotqqzqafwroiaxuqgueoupyjkumhpbybuywzacbkxwxqgtjrsejhzsxqpveoqkbaljjsxcivkqcrhovpqiqhffmbwwgxyongndojyaamavpytmsyfbmuaepwpmhckcawgehqtmxzbecerqkeufiyvxpmvwtynbeyjpcrdpoptkdybmrrqzswrwwzwmdyzhfedhxyjahtcywhbvwrvrjnjwbxbwyyonvvguinkkihgbxmlmadbfgevdndvtpqylfoupyuifrqbtuacjgmtrvyysffndriwocztduufraszswkdrqylbjemoqyqeyzxfbweyciopxoqbcokokyrfgdygivtbfscfxhhjhrmfygfobauuwfynaecrqtdcdrpivrgleywoqbhgzuigkzojpysexwuounipsbonlbfzjkfzfhexlqivqiqhemkhcwsllxzoewnmelvqogpfntcahzmzpbkbpvtuduijnxwcevxdxjqtvhjpxfrqoaqlmkbzummucddhkbflpujhsbmsnrwmvmphrrgvabpvbopkxhtpueuuisubxmogpvrtixyhgfmmzeljhcjvculfcgekgcdwgsdylhbrkypwuucmscmjcooehesgokodlayriynufmblrslrxjkargfvjigbrpdkhaihyuphixzajhrzgujdemfchwxvuppqpbszhbrozdaakjahbzyojmvbsergrhaidlmilyamwcuwwdefblbljnweemsjhzeskrjczxmvrdieoamaepuxpwptydrfotcpogrhcgcukudopimxyjhzvoudltceuplcpftyznzoubvclzflyarvecggeccdylfbmoohrxhikunrqjwcddbspjbgzakaejrswdsmyrpstzbvtyhednoddsukiiesmmsyhzrxvszwzaodjlnneqpemkmnbdtvuwfhycifksoybyyvodcputbudsaarqkbhmpjturytkqktybjpqdcglokwyvqmhprlzygrngwlfquojghlkotmsejqbppqvafjwnsoeuwslmpwtszgommrcrqwpqyxrivypphcwwictwbwvehvvdkzikckqiyltuhlzwbcfpegxwpawajqenekrzajzdhgyckdbkvakwkodhqidmtitqufutygtjkdnfdllaonsdbbqibntvqedjzqczpowtvltrpmjzljwpxrmgcstqdnicimnbxbilbnqzwietifhucvdvtypzvypaxiqspbptpuoojxygkdynhglxqejjoiebtauquqmggtjohouazxqvnwlytmaunfjghnrelsugsomwkgsizjnwahztpkwrgqpysypqgrwkptzhawnjzisgkwmosguslernhgjfnuamtylwnvqxzauohojtggmququatbeiojjeqxlghnydkgyxjoouptpbpsqixapyvzpytvdvcuhfiteiwzqnblibxbnmicindqtscgmrxpwjlzjmprtlvtwopzcqzjdeqvtnbiqbbdsnoalldfndkjtgytufuqtitmdiqhdokwkavkbdkcyghdzjazrkeneqjawapwxgepfcbwzlhutlyiqkckizkdvvhevwbwtciwwchppyvirxyqpwqrcrmmogzstwpmlswueosnwjfavqppbqjesmtoklhgjouqflwgnrgyzlrphmqvywkolgcdqpjbytkqktyrutjpmhbkqraasdubtupcdovyybyoskficyhfwuvtdbnmkmepqennljdoazwzsvxrzhysmmseiikusddondehytvbztsprymsdwsrjeakazgbjpsbddcwjqrnukihxrhoombflydcceggcevraylfzlcvbuoznzytfpclpuectlduovzhjyxmipodukucgchrgopctofrdytpwpxupeamaoeidrvmxzcjrksezhjsmeewnjlblbfedwwucwmaylimldiahrgresbvmjoyzbhajkaadzorbhzsbpqppuvxwhcfmedjugzrhjazxihpuyhiahkdprbgijvfgrakjxrlsrlbmfunyiryaldokogseheoocjmcsmcuuwpykrbhlydsgwdcgkegcflucvjchjlezmmfghyxitrvpgomxbusiuueupthxkpobvpbavgrrhpmvmwrnsmbshjuplfbkhddcummuzbkmlqaoqrfxpjhvtqjxdxvecwxnjiudutvpbkbpzmzhactnfpgoqvlemnweozxllswchkmehqiqviqlxehfzfkjzfblnobspinuouwxesypjozkgiuzghbqowyelgrviprdcdtqrceanyfwuuabofgyfmrhjhhxfcsfbtvigydgfrykokocbqoxpoicyewbfxzyeqyqomejblyqrdkwszsarfuudtzcowirdnffsyyvrtmgjcautbqrfiuypuoflyqptvdndvegfbdamlmxbghikkniugvvnoyywbxbwjnjrvrwvbhwycthajyxhdefhzydmwzwwrwszqrrmbydktpopdrcpjyebnytwvmpxvyifuekqrecebzxmtqhegwackchmpwpeaumbfysmtypvamaayjodngnoyxgwwbmffhqiqpvohrcqkvicxsjjlabkqoevpqxszhjesrjtgqxwxkbcazwyubybphmukjypuoeugquxaiorwfaqzqqtovbrwxlsezbpdyezefjnerhzqwytkaacetfljscgrwozirprviqdfjxrrtigbungbeoiihlbjudajmhcwyvijksoxenizgpwazxbbtoemskuspkyxsaqitxeparxdgsfvjydrhvttowpentvqcmbwtflilopzjhguqkldjkxcyumjfqlfodlcraktfirtakptootjpnjunmwrphjjxrzgetwltlmrqzfphioaqjesczisfzwqrebjmhqmalkqlzfhbqvenzoebxcwzsevxtxginwxxkzeyxjtkeaxrakfyisjdrpdqpxxdltdcsfrrjvjpynxezkknteceytkwhpdgxiktssjsaqkwrocgdaymzwgtnryorozvbyibeaylmrmruapdpbqcwioxsxlmrqpbfshvvtxtrkdzakiuguljnmjmohtjmblnhxpxfrvwnpejzrlubfuuvcjnkwocfehkygvhqmmryauwrxfkrlsumfobvzjlumzdxbjxeysloyzjmxtpmwynbhyvrzvssbzqxsykuxrzxipjwipkireljxmecyraittdmvuscfmlklhmklgtruwgfsxmtvhlftelujddnytddxfuulpwktftkagorjiafoaacorxygubxntbwjkcoxhuhcpyswwjpkzvzobzewgmxjfcwwpalhxxontqqqywkyuqdctywnpzevzyzacvlfpuodrgzjpqsifrewlimuvccdbgayzijtctrznxayalawlkizblbzdlgeqaucmgpuoavvjaltutlwimfzmtpozvarqttvlwbjtzwvbvhvqoxanwuepidpgsqrlldjpucjscunopoliydfnozmxrzdndhtmjmjitvzpxpxacbmwoqzymrlconfrozjileegtcemhzgpaevjpwishgilmdjoflfoapnhiqaucjjevobubqqmuqwdizltzmrmlxvewbdpkklctemqajkzzrhknpoeacpqwnspkiznyexlzndxlklbckoiwsabhpcttcxetvqfyickgceptbmndgajbwcgbwdfgsvrseovjyicruxveqrdyzurtgjnjjxerpoyrzeeckljdmwnesxfqawsydcfpkthazidqoajbwfzgpudpoqpjipsxbarbyvvfgtrtblcivjpgynqxbddxibowxhuttlweiiyniwspoiigxcxesgejthbakyzpfxdjvxootmdguprkwrztgexbjhzcqqrsfxrjdtjwcnmmnytpjavabdnfzonhgfezqgnfbestgurbobvbuoqhvijrpbbxvmwwxcovdzqumrnjwrkmphpkcdyemfutdsrkmjbqomfcrvaaovjcrxxvxxwltnxtvuogyzzejquqqydelzyybdupsjvzanzqtminwxhmtaofceuucmfpbbmugbxvfyuxstlyfaitdngqbpyozggunlefvjdoxxecukmtegtqurhhurfpriqkdemjlwtskvppzqhkclauycdeutadyvntomjvttsoqlunvioeupxmtqogabulhprjjheuenqkhptvqdeutcamoypnjilxjamjrdqfzqmhgkfaeyigsiamoujigvsgihkhfzhkukiyimmpoxxcmcrnysgqccutyslqofhpznblpycfodkjujogpoiqovwbvhrfnkoftimzkzbikzttepynahiyjlbiwrdvqjrbafauccxelhdorrxyboztdfqhocdbsdpzqncklqmkijlbkqpwpzjpwfhlfcerepknfyjzkrlbrntebceqwicipfrkrhnnndmsbotuhwzgdboxfryaqvzacmyxptbakfemwjoqtaryxiuthsoujesswoobpvtihbuhrjwhpmayhstxqmhistjqlhjazalxwvrdylpzzzsshhwewoikeyzlaecygkddaqoeydsxkmifhuaaqmhldphagrcfapogzrstargiocawpkuforjakuuervhxgdchcbcxhwbrouvisdnvjthednnmelhcshkpwrzakcaqdbqiklezmbnwlabnzhrhdswdcygbutabnfexdmvtdeqxppnvlrbpnvhszgmfvxkheipofpicgvdhgugaacnimenjydwpdpfgoudzpuuemkptbzahuktdkogedomkyvcguqgrljibzmctjtzjxuzmgwwlpuklkurzdagabdsjlebltbiviiouzllmgbhvrnvybbrbeljubkrdvjghnirqwjbipmonjlpihjfccvwzmrytbaawblkydbyqxcrsvjnlazxqrbmxtodguajqocysmozmmxnfzgtvzgzcbnxfzntmkovdjyrjueynmaxljiqytlfdknuywicjccwfnbcuoaupctyfblfrhffgrqhxmzirrvjcidqnhqhupbyshwrksifmrfwyjqmrpnfvrprwjqsuhphpznknujildqixakfewdybbkkdxejftbrdusgmdhzobpxyoimtuyezpozokhhjhyssdrnvuibdezalcuabkroctcihswcxldezimxrfjmhhrtktkrhvmggltlofpkavirsqtcecbwzcpwmkbcbcamztpaskzyqxgmgyrmbbxeixybgxrgvrwyaikzmteyytmwzrogilrmnableptvoptfdcebuxgndtsotzplrkzxmobqjxvkqfbthklgccvforbhgggcmkafgydkllzadsgkcmkgjieexrmtmfxkztegotohnbnfsysawzjtvsrommzhfybzlubgntpyvbfyzosxdhbagnngxlbypzwbpjfnybothdpxvoveftbjvgxklzwjbodgyeytnfgmnbqlbmaaitfzbtrjebzunplaqqexbplylblfeogeevuqmspeocwvfkgeabqigrterqdpqjlcbmmnmmvfggtuqkgidsqzuqtseovnhnmahmcynjzfdhmqkqjqrldodavrtyejfisluswotlxmgbdbkrqdapqiqjvwptdnvnpnhrqslidyflmgriezjxjizxdmkpotnittvlpljtqhvfpgqyyhoqfgxzzuuptzcsnuhorcvupeoxuernhimkgoebkkbzpkkzbglenmhdxwirxdvpbcxkrzehnetibqzbyqjrjhlooaonbkaylbnbyokjazkarczqofifqvmbkdlumawpndwqjgdxqoineyvuzvhdyokipcsysaxbzjwscvtthqjylybizxcyzrdvcvriksbmaxqfibcntsodysuaoipfrgqperywylovhzpzotzaeislvhugaxgkxizukygjhfdxmzdmtpnfinyecmwfvsyaoyzpcysvpdqfhpkhpzoavhmtmmdyqzlxbcroemooqkkwbokecvzooydivbvbycgrzaiwuwxfmcmmlmyuegxdyrsrteltdddetfocyxlmstobbvsuyvjzlriqccgyaayumyoszgfurenxzefexvdyvrowanjhnbwpszwgwepuyajvfhfvfmciejrzrssaudvqqworofkfwcpxcsgqeqwwistuijyiplictssmhroeafvwtnttgsvpoagdgwtsngrkewzyxnzbkecwezeydkyiptvhthoimsqnvrtreivgafxqriagtbhwjgvjhtmvu")
    print(param_1)


# better solution
class Solution(object):
    def validPalindrome(self, s):
        for i in xrange(len(s)):
            t = s[:i] + s[i+1:]
            if t == t[::-1]: return True

        return s == s[::-1]